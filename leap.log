log started: Tue Aug 27 11:29:52 2024

Log file: ./leap.log
>> # ----- NOTE: this is designed for PDB format 3!
>> #	Uses ff99bsc0+bsc1 for DNA
>> #               (ff99): Wang et al. J. Comp. Chem. 21: 1049, 2000
>> #               (bsc0): Perez et al. Biophys J. 92: 3817, 2007
>> #               (bsc1): Ivani et al. Nature Methods 13: 55, 2016
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "H"   "H" "sp3" }
>> 	{ "HO"  "H" "sp3" }
>> 	{ "HS"  "H" "sp3" }
>> 	{ "H1"  "H" "sp3" }
>> 	{ "H2"  "H" "sp3" }
>> 	{ "H3"  "H" "sp3" }
>> 	{ "H4"  "H" "sp3" }
>> 	{ "H5"  "H" "sp3" }
>> 	{ "HW"  "H" "sp3" }
>> 	{ "HC"  "H" "sp3" }
>> 	{ "HA"  "H" "sp3" }
>> 	{ "HP"  "H" "sp3" }
>> 	{ "HZ"  "H" "sp3" }
>> 	{ "OH"  "O" "sp3" }
>> 	{ "OS"  "O" "sp3" }
>> 	{ "O"   "O" "sp2" }
>> 	{ "O2"  "O" "sp2" }
>> 	{ "OP"  "O" "sp2" }
>> 	{ "OW"  "O" "sp3" }
>> 	{ "CT"  "C" "sp3" }
>> 	{ "CX"  "C" "sp3" }
>> 	{ "C8"  "C" "sp3" }
>> 	{ "2C"  "C" "sp3" }
>> 	{ "3C"  "C" "sp3" }
>> 	{ "CH"  "C" "sp3" }
>> 	{ "CS"  "C" "sp2" }
>> 	{ "C"   "C" "sp2" }
>> 	{ "CO"  "C" "sp2" }
>> 	{ "C*"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CB"  "C" "sp2" }
>> 	{ "CC"  "C" "sp2" }
>> 	{ "CN"  "C" "sp2" }
>> 	{ "CM"  "C" "sp2" }
>> 	{ "CK"  "C" "sp2" }
>> 	{ "CQ"  "C" "sp2" }
>> 	{ "CD"  "C" "sp2" }
>> 	{ "C5"  "C" "sp2" }
>> 	{ "C4"  "C" "sp2" }
>> 	{ "CP"  "C" "sp2" }
>> 	{ "CI"  "C" "sp3" }
>> 	{ "CJ"  "C" "sp2" }
>> 	{ "CW"  "C" "sp2" }
>> 	{ "CV"  "C" "sp2" }
>> 	{ "CR"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CY"  "C" "sp2" }
>> 	{ "C0"  "Ca" "sp3" }
>> 	{ "MG"  "Mg" "sp3" }
>> 	{ "N"   "N" "sp2" }
>> 	{ "NA"  "N" "sp2" }
>> 	{ "N2"  "N" "sp2" }
>> 	{ "N*"  "N" "sp2" }
>> 	{ "NP"  "N" "sp2" }
>> 	{ "NQ"  "N" "sp2" }
>> 	{ "NB"  "N" "sp2" }
>> 	{ "NC"  "N" "sp2" }
>> 	{ "NT"  "N" "sp3" }
>> 	{ "NY"  "N" "sp2" }
>> 	{ "N3"  "N" "sp3" }
>> 	{ "S"   "S" "sp3" }
>> 	{ "SH"  "S" "sp3" }
>> 	{ "P"   "P" "sp3" }
>> 	{ "LP"  ""  "sp3" }
>> 	{ "EP"  ""  "sp3" }
>> 	{ "F"   "F" "sp3" }
>> 	{ "Cl"  "Cl" "sp3" }
>> 	{ "Br"  "Br" "sp3" }
>> 	{ "I"   "I"  "sp3" }
>> 	{ "F-"   "F" "sp3" }
>> 	{ "Cl-"  "Cl" "sp3" }
>> 	{ "Br-"  "Br" "sp3" }
>> 	{ "I-"   "I"  "sp3" }
>> 	{ "Li+"  "Li"  "sp3" }
>> 	{ "Na+"  "Na"  "sp3" }
>> 	{ "K+"  "K"  "sp3" }
>> 	{ "Rb+"  "Rb"  "sp3" }
>> 	{ "Cs+"  "Cs"  "sp3" }
>> 	{ "Mg+"  "Mg"  "sp3" }
>> }
>> 
>> #
>> #	Load the main parameter set.
>> #
>> 
>> parm10 = loadamberparams parm10.dat
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/parm10.dat
Reading title:
PARM99 + frcmod.ff99SB + frcmod.parmbsc0 + OL3 for RNA
>> 
>> #
>> #	Load nucleic acids
>> #
>> 
>> addPdbResMap {
>>   { 0 "DG" "DG5"  } { 1 "DG" "DG3"  }  
>>   { 0 "DA" "DA5"  } { 1 "DA" "DA3"  }  
>>   { 0 "DC" "DC5"  } { 1 "DC" "DC3"  }  
>>   { 0 "DT" "DT5"  } { 1 "DT" "DT3"  }  
>> #  some really old Amber residue names, assuming DNA:
>>   { 0 "GUA" "DG5"  } { 1 "GUA" "DG3"  } { "GUA" "DG" }
>>   { 0 "ADE" "DA5"  } { 1 "ADE" "DA3"  } { "ADE" "DA" }
>>   { 0 "CYT" "DC5"  } { 1 "CYT" "DC3"  } { "CYT" "DC" }
>>   { 0 "THY" "DT5"  } { 1 "THY" "DT3"  } { "THY" "DT" }
>> 
>> }
>> 
>> #  try to be good about reading in really old atom names as well:
>> addPdbAtomMap {
>>   { "O5*" "O5'" }
>>   { "C5*" "C5'" }
>>   { "C4*" "C4'" }
>>   { "O4*" "O4'" }
>>   { "C3*" "C3'" }
>>   { "O3*" "O3'" }
>>   { "C2*" "C2'" }
>>   { "O2*" "O2'" }
>>   { "C1*" "C1'" }
>>   { "C5M" "C7"  }
>>   { "H1*" "H1'" }
>>   { "H2*1" "H2'" }
>>   { "'H2'" "H2''" }
>>   { "H2*2" "H2''" }
>>   { "H2'1" "H2'" }
>>   { "H2'2" "H2''" }
>>   { "H3*" "H3'" }
>>   { "H4*" "H4'" }
>>   { "H5*1" "H5'" }
>>   { "H5*2" "H5''" }
>>   { "H5'1" "H5'" }
>>   { "H5'2" "H5''" }
>>   { "'H5'" "H5''" }
>>   { "HO'2" "HO2'" }
>>   { "H5T"  "HO5'" }
>>   { "H3T"  "HO3'" }
>>   { "O1'" "O4'" }
>>   { "OA"  "OP1" }
>>   { "OB"  "OP2" }
>>   { "O1P" "OP1" }
>>   { "O2P" "OP2" }
>> }
>> 
>> #
>> # Load parameters for BSC1
>> #
>> addAtomTypes {
>>   { "C1" "C" "sp2" }
>>   { "C2" "C" "sp2" }
>>   { "CI" "C" "sp3" }
>>   { "CE" "C" "sp3" }
>>  }
>> 
>> loadoff parmBSC1.lib
Loading library: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/lib/parmBSC1.lib
Loading: DA
Loading: DA3
Loading: DA5
Loading: DAN
Loading: DC
Loading: DC3
Loading: DC5
Loading: DCN
Loading: DG
Loading: DG3
Loading: DG5
Loading: DGN
Loading: DT
Loading: DT3
Loading: DT5
Loading: DTN
>> loadamberparams frcmod.parmbsc1
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/frcmod.parmbsc1
Reading force field modification type file (frcmod)
Reading title:
Parmbsc1 force-field for DNA
> 
> 
> # Define the sequence
> dna = sequence { DC5 DG DC DG DA DA DT DT DA DG DC DG DC3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DA
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DC3
> 
> # Save the structure as a PDB file
> savepdb dna dna_structure.pdb
Writing pdb file: dna_structure.pdb
> saveamberparm dna dna_structure.prmtop dna_structure.inpcrd
Checking Unit.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Warning!
The unperturbed charge of the unit (-12.000000) is not zero.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Note.
Ignoring the warning from Unit Checking.

Building topology.
Building atom parameters.
Building bond parameters.
Building angle parameters.
Building proper torsion parameters.
Building improper torsion parameters.
 total 89 improper torsions applied
Building H-Bond parameters.
Incorporating Non-Bonded adjustments.
Not Marking per-residue atom chain types.
Marking per-residue atom chain types.
 (no restraints)
> 
> quit  # Exit tleap
	Quit

Exiting LEaP: Errors = 0; Warnings = 1; Notes = 1.
log started: Tue Aug 27 12:00:39 2024

Log file: ./leap.log
>> # ----- NOTE: this is designed for PDB format 3!
>> #	Uses ff99bsc0+bsc1 for DNA
>> #               (ff99): Wang et al. J. Comp. Chem. 21: 1049, 2000
>> #               (bsc0): Perez et al. Biophys J. 92: 3817, 2007
>> #               (bsc1): Ivani et al. Nature Methods 13: 55, 2016
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "H"   "H" "sp3" }
>> 	{ "HO"  "H" "sp3" }
>> 	{ "HS"  "H" "sp3" }
>> 	{ "H1"  "H" "sp3" }
>> 	{ "H2"  "H" "sp3" }
>> 	{ "H3"  "H" "sp3" }
>> 	{ "H4"  "H" "sp3" }
>> 	{ "H5"  "H" "sp3" }
>> 	{ "HW"  "H" "sp3" }
>> 	{ "HC"  "H" "sp3" }
>> 	{ "HA"  "H" "sp3" }
>> 	{ "HP"  "H" "sp3" }
>> 	{ "HZ"  "H" "sp3" }
>> 	{ "OH"  "O" "sp3" }
>> 	{ "OS"  "O" "sp3" }
>> 	{ "O"   "O" "sp2" }
>> 	{ "O2"  "O" "sp2" }
>> 	{ "OP"  "O" "sp2" }
>> 	{ "OW"  "O" "sp3" }
>> 	{ "CT"  "C" "sp3" }
>> 	{ "CX"  "C" "sp3" }
>> 	{ "C8"  "C" "sp3" }
>> 	{ "2C"  "C" "sp3" }
>> 	{ "3C"  "C" "sp3" }
>> 	{ "CH"  "C" "sp3" }
>> 	{ "CS"  "C" "sp2" }
>> 	{ "C"   "C" "sp2" }
>> 	{ "CO"  "C" "sp2" }
>> 	{ "C*"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CB"  "C" "sp2" }
>> 	{ "CC"  "C" "sp2" }
>> 	{ "CN"  "C" "sp2" }
>> 	{ "CM"  "C" "sp2" }
>> 	{ "CK"  "C" "sp2" }
>> 	{ "CQ"  "C" "sp2" }
>> 	{ "CD"  "C" "sp2" }
>> 	{ "C5"  "C" "sp2" }
>> 	{ "C4"  "C" "sp2" }
>> 	{ "CP"  "C" "sp2" }
>> 	{ "CI"  "C" "sp3" }
>> 	{ "CJ"  "C" "sp2" }
>> 	{ "CW"  "C" "sp2" }
>> 	{ "CV"  "C" "sp2" }
>> 	{ "CR"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CY"  "C" "sp2" }
>> 	{ "C0"  "Ca" "sp3" }
>> 	{ "MG"  "Mg" "sp3" }
>> 	{ "N"   "N" "sp2" }
>> 	{ "NA"  "N" "sp2" }
>> 	{ "N2"  "N" "sp2" }
>> 	{ "N*"  "N" "sp2" }
>> 	{ "NP"  "N" "sp2" }
>> 	{ "NQ"  "N" "sp2" }
>> 	{ "NB"  "N" "sp2" }
>> 	{ "NC"  "N" "sp2" }
>> 	{ "NT"  "N" "sp3" }
>> 	{ "NY"  "N" "sp2" }
>> 	{ "N3"  "N" "sp3" }
>> 	{ "S"   "S" "sp3" }
>> 	{ "SH"  "S" "sp3" }
>> 	{ "P"   "P" "sp3" }
>> 	{ "LP"  ""  "sp3" }
>> 	{ "EP"  ""  "sp3" }
>> 	{ "F"   "F" "sp3" }
>> 	{ "Cl"  "Cl" "sp3" }
>> 	{ "Br"  "Br" "sp3" }
>> 	{ "I"   "I"  "sp3" }
>> 	{ "F-"   "F" "sp3" }
>> 	{ "Cl-"  "Cl" "sp3" }
>> 	{ "Br-"  "Br" "sp3" }
>> 	{ "I-"   "I"  "sp3" }
>> 	{ "Li+"  "Li"  "sp3" }
>> 	{ "Na+"  "Na"  "sp3" }
>> 	{ "K+"  "K"  "sp3" }
>> 	{ "Rb+"  "Rb"  "sp3" }
>> 	{ "Cs+"  "Cs"  "sp3" }
>> 	{ "Mg+"  "Mg"  "sp3" }
>> }
>> 
>> #
>> #	Load the main parameter set.
>> #
>> 
>> parm10 = loadamberparams parm10.dat
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/parm10.dat
Reading title:
PARM99 + frcmod.ff99SB + frcmod.parmbsc0 + OL3 for RNA
>> 
>> #
>> #	Load nucleic acids
>> #
>> 
>> addPdbResMap {
>>   { 0 "DG" "DG5"  } { 1 "DG" "DG3"  }  
>>   { 0 "DA" "DA5"  } { 1 "DA" "DA3"  }  
>>   { 0 "DC" "DC5"  } { 1 "DC" "DC3"  }  
>>   { 0 "DT" "DT5"  } { 1 "DT" "DT3"  }  
>> #  some really old Amber residue names, assuming DNA:
>>   { 0 "GUA" "DG5"  } { 1 "GUA" "DG3"  } { "GUA" "DG" }
>>   { 0 "ADE" "DA5"  } { 1 "ADE" "DA3"  } { "ADE" "DA" }
>>   { 0 "CYT" "DC5"  } { 1 "CYT" "DC3"  } { "CYT" "DC" }
>>   { 0 "THY" "DT5"  } { 1 "THY" "DT3"  } { "THY" "DT" }
>> 
>> }
>> 
>> #  try to be good about reading in really old atom names as well:
>> addPdbAtomMap {
>>   { "O5*" "O5'" }
>>   { "C5*" "C5'" }
>>   { "C4*" "C4'" }
>>   { "O4*" "O4'" }
>>   { "C3*" "C3'" }
>>   { "O3*" "O3'" }
>>   { "C2*" "C2'" }
>>   { "O2*" "O2'" }
>>   { "C1*" "C1'" }
>>   { "C5M" "C7"  }
>>   { "H1*" "H1'" }
>>   { "H2*1" "H2'" }
>>   { "'H2'" "H2''" }
>>   { "H2*2" "H2''" }
>>   { "H2'1" "H2'" }
>>   { "H2'2" "H2''" }
>>   { "H3*" "H3'" }
>>   { "H4*" "H4'" }
>>   { "H5*1" "H5'" }
>>   { "H5*2" "H5''" }
>>   { "H5'1" "H5'" }
>>   { "H5'2" "H5''" }
>>   { "'H5'" "H5''" }
>>   { "HO'2" "HO2'" }
>>   { "H5T"  "HO5'" }
>>   { "H3T"  "HO3'" }
>>   { "O1'" "O4'" }
>>   { "OA"  "OP1" }
>>   { "OB"  "OP2" }
>>   { "O1P" "OP1" }
>>   { "O2P" "OP2" }
>> }
>> 
>> #
>> # Load parameters for BSC1
>> #
>> addAtomTypes {
>>   { "C1" "C" "sp2" }
>>   { "C2" "C" "sp2" }
>>   { "CI" "C" "sp3" }
>>   { "CE" "C" "sp3" }
>>  }
>> 
>> loadoff parmBSC1.lib
Loading library: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/lib/parmBSC1.lib
Loading: DA
Loading: DA3
Loading: DA5
Loading: DAN
Loading: DC
Loading: DC3
Loading: DC5
Loading: DCN
Loading: DG
Loading: DG3
Loading: DG5
Loading: DGN
Loading: DT
Loading: DT3
Loading: DT5
Loading: DTN
>> loadamberparams frcmod.parmbsc1
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/frcmod.parmbsc1
Reading force field modification type file (frcmod)
Reading title:
Parmbsc1 force-field for DNA
> 
> 
> # Define the first strand (strand1)
> strand1 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG DC3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DC3
> 
> # Define the second strand (strand2), which will be complementary to strand1
> # Since you provided identical strands, we'll use the same sequence for strand2.
> strand2 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG DC3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DC3
> 
> # Combine the two strands into a double-stranded DNA
> dna = combine { strand1 strand2 }
  Sequence: DC5
  Sequence: DC5
> 
> # Add 3D structure generation (minimization) if needed
> # solvateBox dna TIP3PBOX 10.0  # Optional: Solvate with water box (10 Å buffer)
> 
> # Save the structure as a PDB file
> savepdb dna dna_double_helix.pdb
Writing pdb file: dna_double_helix.pdb
> saveamberparm dna dna_double_helix.prmtop dna_double_helix.inpcrd
Checking Unit.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Warning!
The unperturbed charge of the unit (-24.000000) is not zero.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Note.
Ignoring the warning from Unit Checking.

Building topology.
Building atom parameters.
Building bond parameters.
Building angle parameters.
Building proper torsion parameters.
Building improper torsion parameters.
 total 176 improper torsions applied
Building H-Bond parameters.
Incorporating Non-Bonded adjustments.
Not Marking per-residue atom chain types.
Marking per-residue atom chain types.
 (no restraints)
> 
> quit  # Exit tleap
	Quit

Exiting LEaP: Errors = 0; Warnings = 1; Notes = 1.
log started: Tue Aug 27 12:10:24 2024

Log file: ./leap.log
>> # ----- NOTE: this is designed for PDB format 3!
>> #	Uses ff99bsc0+bsc1 for DNA
>> #               (ff99): Wang et al. J. Comp. Chem. 21: 1049, 2000
>> #               (bsc0): Perez et al. Biophys J. 92: 3817, 2007
>> #               (bsc1): Ivani et al. Nature Methods 13: 55, 2016
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "H"   "H" "sp3" }
>> 	{ "HO"  "H" "sp3" }
>> 	{ "HS"  "H" "sp3" }
>> 	{ "H1"  "H" "sp3" }
>> 	{ "H2"  "H" "sp3" }
>> 	{ "H3"  "H" "sp3" }
>> 	{ "H4"  "H" "sp3" }
>> 	{ "H5"  "H" "sp3" }
>> 	{ "HW"  "H" "sp3" }
>> 	{ "HC"  "H" "sp3" }
>> 	{ "HA"  "H" "sp3" }
>> 	{ "HP"  "H" "sp3" }
>> 	{ "HZ"  "H" "sp3" }
>> 	{ "OH"  "O" "sp3" }
>> 	{ "OS"  "O" "sp3" }
>> 	{ "O"   "O" "sp2" }
>> 	{ "O2"  "O" "sp2" }
>> 	{ "OP"  "O" "sp2" }
>> 	{ "OW"  "O" "sp3" }
>> 	{ "CT"  "C" "sp3" }
>> 	{ "CX"  "C" "sp3" }
>> 	{ "C8"  "C" "sp3" }
>> 	{ "2C"  "C" "sp3" }
>> 	{ "3C"  "C" "sp3" }
>> 	{ "CH"  "C" "sp3" }
>> 	{ "CS"  "C" "sp2" }
>> 	{ "C"   "C" "sp2" }
>> 	{ "CO"  "C" "sp2" }
>> 	{ "C*"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CB"  "C" "sp2" }
>> 	{ "CC"  "C" "sp2" }
>> 	{ "CN"  "C" "sp2" }
>> 	{ "CM"  "C" "sp2" }
>> 	{ "CK"  "C" "sp2" }
>> 	{ "CQ"  "C" "sp2" }
>> 	{ "CD"  "C" "sp2" }
>> 	{ "C5"  "C" "sp2" }
>> 	{ "C4"  "C" "sp2" }
>> 	{ "CP"  "C" "sp2" }
>> 	{ "CI"  "C" "sp3" }
>> 	{ "CJ"  "C" "sp2" }
>> 	{ "CW"  "C" "sp2" }
>> 	{ "CV"  "C" "sp2" }
>> 	{ "CR"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CY"  "C" "sp2" }
>> 	{ "C0"  "Ca" "sp3" }
>> 	{ "MG"  "Mg" "sp3" }
>> 	{ "N"   "N" "sp2" }
>> 	{ "NA"  "N" "sp2" }
>> 	{ "N2"  "N" "sp2" }
>> 	{ "N*"  "N" "sp2" }
>> 	{ "NP"  "N" "sp2" }
>> 	{ "NQ"  "N" "sp2" }
>> 	{ "NB"  "N" "sp2" }
>> 	{ "NC"  "N" "sp2" }
>> 	{ "NT"  "N" "sp3" }
>> 	{ "NY"  "N" "sp2" }
>> 	{ "N3"  "N" "sp3" }
>> 	{ "S"   "S" "sp3" }
>> 	{ "SH"  "S" "sp3" }
>> 	{ "P"   "P" "sp3" }
>> 	{ "LP"  ""  "sp3" }
>> 	{ "EP"  ""  "sp3" }
>> 	{ "F"   "F" "sp3" }
>> 	{ "Cl"  "Cl" "sp3" }
>> 	{ "Br"  "Br" "sp3" }
>> 	{ "I"   "I"  "sp3" }
>> 	{ "F-"   "F" "sp3" }
>> 	{ "Cl-"  "Cl" "sp3" }
>> 	{ "Br-"  "Br" "sp3" }
>> 	{ "I-"   "I"  "sp3" }
>> 	{ "Li+"  "Li"  "sp3" }
>> 	{ "Na+"  "Na"  "sp3" }
>> 	{ "K+"  "K"  "sp3" }
>> 	{ "Rb+"  "Rb"  "sp3" }
>> 	{ "Cs+"  "Cs"  "sp3" }
>> 	{ "Mg+"  "Mg"  "sp3" }
>> }
>> 
>> #
>> #	Load the main parameter set.
>> #
>> 
>> parm10 = loadamberparams parm10.dat
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/parm10.dat
Reading title:
PARM99 + frcmod.ff99SB + frcmod.parmbsc0 + OL3 for RNA
>> 
>> #
>> #	Load nucleic acids
>> #
>> 
>> addPdbResMap {
>>   { 0 "DG" "DG5"  } { 1 "DG" "DG3"  }  
>>   { 0 "DA" "DA5"  } { 1 "DA" "DA3"  }  
>>   { 0 "DC" "DC5"  } { 1 "DC" "DC3"  }  
>>   { 0 "DT" "DT5"  } { 1 "DT" "DT3"  }  
>> #  some really old Amber residue names, assuming DNA:
>>   { 0 "GUA" "DG5"  } { 1 "GUA" "DG3"  } { "GUA" "DG" }
>>   { 0 "ADE" "DA5"  } { 1 "ADE" "DA3"  } { "ADE" "DA" }
>>   { 0 "CYT" "DC5"  } { 1 "CYT" "DC3"  } { "CYT" "DC" }
>>   { 0 "THY" "DT5"  } { 1 "THY" "DT3"  } { "THY" "DT" }
>> 
>> }
>> 
>> #  try to be good about reading in really old atom names as well:
>> addPdbAtomMap {
>>   { "O5*" "O5'" }
>>   { "C5*" "C5'" }
>>   { "C4*" "C4'" }
>>   { "O4*" "O4'" }
>>   { "C3*" "C3'" }
>>   { "O3*" "O3'" }
>>   { "C2*" "C2'" }
>>   { "O2*" "O2'" }
>>   { "C1*" "C1'" }
>>   { "C5M" "C7"  }
>>   { "H1*" "H1'" }
>>   { "H2*1" "H2'" }
>>   { "'H2'" "H2''" }
>>   { "H2*2" "H2''" }
>>   { "H2'1" "H2'" }
>>   { "H2'2" "H2''" }
>>   { "H3*" "H3'" }
>>   { "H4*" "H4'" }
>>   { "H5*1" "H5'" }
>>   { "H5*2" "H5''" }
>>   { "H5'1" "H5'" }
>>   { "H5'2" "H5''" }
>>   { "'H5'" "H5''" }
>>   { "HO'2" "HO2'" }
>>   { "H5T"  "HO5'" }
>>   { "H3T"  "HO3'" }
>>   { "O1'" "O4'" }
>>   { "OA"  "OP1" }
>>   { "OB"  "OP2" }
>>   { "O1P" "OP1" }
>>   { "O2P" "OP2" }
>> }
>> 
>> #
>> # Load parameters for BSC1
>> #
>> addAtomTypes {
>>   { "C1" "C" "sp2" }
>>   { "C2" "C" "sp2" }
>>   { "CI" "C" "sp3" }
>>   { "CE" "C" "sp3" }
>>  }
>> 
>> loadoff parmBSC1.lib
Loading library: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/lib/parmBSC1.lib
Loading: DA
Loading: DA3
Loading: DA5
Loading: DAN
Loading: DC
Loading: DC3
Loading: DC5
Loading: DCN
Loading: DG
Loading: DG3
Loading: DG5
Loading: DGN
Loading: DT
Loading: DT3
Loading: DT5
Loading: DTN
>> loadamberparams frcmod.parmbsc1
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/frcmod.parmbsc1
Reading force field modification type file (frcmod)
Reading title:
Parmbsc1 force-field for DNA
> 
> 
> # Define the first strand (strand1)
> strand1 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG3
> 
> # Define the second strand (strand2), which will be complementary to strand1
> # Since you provided identical strands, we'll use the same sequence for strand2.
> strand2 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG3
> 
> # Combine the two strands into a double-stranded DNA
> dna = combine { strand1 strand2 }
  Sequence: DC5
  Sequence: DC5
> 
> # Add 3D structure generation (minimization) if needed
> # solvateBox dna TIP3PBOX 10.0  # Optional: Solvate with water box (10 Å buffer)
> 
> # Save the structure as a PDB file
> savepdb dna dna_double_helix.pdb
Writing pdb file: dna_double_helix.pdb
> saveamberparm dna dna_double_helix.prmtop dna_double_helix.inpcrd
Checking Unit.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Warning!
The unperturbed charge of the unit (-22.000000) is not zero.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Note.
Ignoring the warning from Unit Checking.

Building topology.
Building atom parameters.
Building bond parameters.
Building angle parameters.
Building proper torsion parameters.
Building improper torsion parameters.
 total 164 improper torsions applied
Building H-Bond parameters.
Incorporating Non-Bonded adjustments.
Not Marking per-residue atom chain types.
Marking per-residue atom chain types.
 (no restraints)
> 
> quit  # Exit tleap
	Quit

Exiting LEaP: Errors = 0; Warnings = 1; Notes = 1.
log started: Tue Aug 27 12:27:27 2024

Log file: ./leap.log
>> # ----- NOTE: this is designed for PDB format 3!
>> #	Uses ff99bsc0+bsc1 for DNA
>> #               (ff99): Wang et al. J. Comp. Chem. 21: 1049, 2000
>> #               (bsc0): Perez et al. Biophys J. 92: 3817, 2007
>> #               (bsc1): Ivani et al. Nature Methods 13: 55, 2016
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "H"   "H" "sp3" }
>> 	{ "HO"  "H" "sp3" }
>> 	{ "HS"  "H" "sp3" }
>> 	{ "H1"  "H" "sp3" }
>> 	{ "H2"  "H" "sp3" }
>> 	{ "H3"  "H" "sp3" }
>> 	{ "H4"  "H" "sp3" }
>> 	{ "H5"  "H" "sp3" }
>> 	{ "HW"  "H" "sp3" }
>> 	{ "HC"  "H" "sp3" }
>> 	{ "HA"  "H" "sp3" }
>> 	{ "HP"  "H" "sp3" }
>> 	{ "HZ"  "H" "sp3" }
>> 	{ "OH"  "O" "sp3" }
>> 	{ "OS"  "O" "sp3" }
>> 	{ "O"   "O" "sp2" }
>> 	{ "O2"  "O" "sp2" }
>> 	{ "OP"  "O" "sp2" }
>> 	{ "OW"  "O" "sp3" }
>> 	{ "CT"  "C" "sp3" }
>> 	{ "CX"  "C" "sp3" }
>> 	{ "C8"  "C" "sp3" }
>> 	{ "2C"  "C" "sp3" }
>> 	{ "3C"  "C" "sp3" }
>> 	{ "CH"  "C" "sp3" }
>> 	{ "CS"  "C" "sp2" }
>> 	{ "C"   "C" "sp2" }
>> 	{ "CO"  "C" "sp2" }
>> 	{ "C*"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CB"  "C" "sp2" }
>> 	{ "CC"  "C" "sp2" }
>> 	{ "CN"  "C" "sp2" }
>> 	{ "CM"  "C" "sp2" }
>> 	{ "CK"  "C" "sp2" }
>> 	{ "CQ"  "C" "sp2" }
>> 	{ "CD"  "C" "sp2" }
>> 	{ "C5"  "C" "sp2" }
>> 	{ "C4"  "C" "sp2" }
>> 	{ "CP"  "C" "sp2" }
>> 	{ "CI"  "C" "sp3" }
>> 	{ "CJ"  "C" "sp2" }
>> 	{ "CW"  "C" "sp2" }
>> 	{ "CV"  "C" "sp2" }
>> 	{ "CR"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CY"  "C" "sp2" }
>> 	{ "C0"  "Ca" "sp3" }
>> 	{ "MG"  "Mg" "sp3" }
>> 	{ "N"   "N" "sp2" }
>> 	{ "NA"  "N" "sp2" }
>> 	{ "N2"  "N" "sp2" }
>> 	{ "N*"  "N" "sp2" }
>> 	{ "NP"  "N" "sp2" }
>> 	{ "NQ"  "N" "sp2" }
>> 	{ "NB"  "N" "sp2" }
>> 	{ "NC"  "N" "sp2" }
>> 	{ "NT"  "N" "sp3" }
>> 	{ "NY"  "N" "sp2" }
>> 	{ "N3"  "N" "sp3" }
>> 	{ "S"   "S" "sp3" }
>> 	{ "SH"  "S" "sp3" }
>> 	{ "P"   "P" "sp3" }
>> 	{ "LP"  ""  "sp3" }
>> 	{ "EP"  ""  "sp3" }
>> 	{ "F"   "F" "sp3" }
>> 	{ "Cl"  "Cl" "sp3" }
>> 	{ "Br"  "Br" "sp3" }
>> 	{ "I"   "I"  "sp3" }
>> 	{ "F-"   "F" "sp3" }
>> 	{ "Cl-"  "Cl" "sp3" }
>> 	{ "Br-"  "Br" "sp3" }
>> 	{ "I-"   "I"  "sp3" }
>> 	{ "Li+"  "Li"  "sp3" }
>> 	{ "Na+"  "Na"  "sp3" }
>> 	{ "K+"  "K"  "sp3" }
>> 	{ "Rb+"  "Rb"  "sp3" }
>> 	{ "Cs+"  "Cs"  "sp3" }
>> 	{ "Mg+"  "Mg"  "sp3" }
>> }
>> 
>> #
>> #	Load the main parameter set.
>> #
>> 
>> parm10 = loadamberparams parm10.dat
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/parm10.dat
Reading title:
PARM99 + frcmod.ff99SB + frcmod.parmbsc0 + OL3 for RNA
>> 
>> #
>> #	Load nucleic acids
>> #
>> 
>> addPdbResMap {
>>   { 0 "DG" "DG5"  } { 1 "DG" "DG3"  }  
>>   { 0 "DA" "DA5"  } { 1 "DA" "DA3"  }  
>>   { 0 "DC" "DC5"  } { 1 "DC" "DC3"  }  
>>   { 0 "DT" "DT5"  } { 1 "DT" "DT3"  }  
>> #  some really old Amber residue names, assuming DNA:
>>   { 0 "GUA" "DG5"  } { 1 "GUA" "DG3"  } { "GUA" "DG" }
>>   { 0 "ADE" "DA5"  } { 1 "ADE" "DA3"  } { "ADE" "DA" }
>>   { 0 "CYT" "DC5"  } { 1 "CYT" "DC3"  } { "CYT" "DC" }
>>   { 0 "THY" "DT5"  } { 1 "THY" "DT3"  } { "THY" "DT" }
>> 
>> }
>> 
>> #  try to be good about reading in really old atom names as well:
>> addPdbAtomMap {
>>   { "O5*" "O5'" }
>>   { "C5*" "C5'" }
>>   { "C4*" "C4'" }
>>   { "O4*" "O4'" }
>>   { "C3*" "C3'" }
>>   { "O3*" "O3'" }
>>   { "C2*" "C2'" }
>>   { "O2*" "O2'" }
>>   { "C1*" "C1'" }
>>   { "C5M" "C7"  }
>>   { "H1*" "H1'" }
>>   { "H2*1" "H2'" }
>>   { "'H2'" "H2''" }
>>   { "H2*2" "H2''" }
>>   { "H2'1" "H2'" }
>>   { "H2'2" "H2''" }
>>   { "H3*" "H3'" }
>>   { "H4*" "H4'" }
>>   { "H5*1" "H5'" }
>>   { "H5*2" "H5''" }
>>   { "H5'1" "H5'" }
>>   { "H5'2" "H5''" }
>>   { "'H5'" "H5''" }
>>   { "HO'2" "HO2'" }
>>   { "H5T"  "HO5'" }
>>   { "H3T"  "HO3'" }
>>   { "O1'" "O4'" }
>>   { "OA"  "OP1" }
>>   { "OB"  "OP2" }
>>   { "O1P" "OP1" }
>>   { "O2P" "OP2" }
>> }
>> 
>> #
>> # Load parameters for BSC1
>> #
>> addAtomTypes {
>>   { "C1" "C" "sp2" }
>>   { "C2" "C" "sp2" }
>>   { "CI" "C" "sp3" }
>>   { "CE" "C" "sp3" }
>>  }
>> 
>> loadoff parmBSC1.lib
Loading library: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/lib/parmBSC1.lib
Loading: DA
Loading: DA3
Loading: DA5
Loading: DAN
Loading: DC
Loading: DC3
Loading: DC5
Loading: DCN
Loading: DG
Loading: DG3
Loading: DG5
Loading: DGN
Loading: DT
Loading: DT3
Loading: DT5
Loading: DTN
>> loadamberparams frcmod.parmbsc1
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/frcmod.parmbsc1
Reading force field modification type file (frcmod)
Reading title:
Parmbsc1 force-field for DNA
> 
> 
> # Define the first strand (strand1)
> strand1 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG DC3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DC3
> 
> # Define the second strand (strand2), which will be complementary to strand1
> # Ensure the sequence is complementary to strand1 for proper pairing
> strand2 = sequence { DG5 DC DG DC DT DT DA DA DC DG DC DG DG3 }
Sequence: DG5
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DT
Sequence: DT
Sequence: DA
Sequence: DA
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DG3
> 
> # Combine the two strands into a double-stranded DNA
> dna = combine { strand1 strand2 }
  Sequence: DC5
  Sequence: DG5
> 
> # Move the strands apart slightly to avoid overlap and ensure proper pairing
> translate dna {0.0 0.0 2.0}
> 
> # Rotate one of the strands if necessary to ensure proper base pairing
> # This may not be necessary depending on how tleap interprets the sequences, but it can help fine-tune the orientation.
> rotate dna {0.0 0.0 30.0}

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Fatal Error!
Error from the parser: 
       syntax error.
       Check for typos, misspellings, etc.
       Try help on the command name and desc on the command arguments.

Exiting LEaP: Errors = 1; Warnings = 0; Notes = 0.
log started: Tue Aug 27 12:28:22 2024

Log file: ./leap.log
>> # ----- NOTE: this is designed for PDB format 3!
>> #	Uses ff99bsc0+bsc1 for DNA
>> #               (ff99): Wang et al. J. Comp. Chem. 21: 1049, 2000
>> #               (bsc0): Perez et al. Biophys J. 92: 3817, 2007
>> #               (bsc1): Ivani et al. Nature Methods 13: 55, 2016
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "H"   "H" "sp3" }
>> 	{ "HO"  "H" "sp3" }
>> 	{ "HS"  "H" "sp3" }
>> 	{ "H1"  "H" "sp3" }
>> 	{ "H2"  "H" "sp3" }
>> 	{ "H3"  "H" "sp3" }
>> 	{ "H4"  "H" "sp3" }
>> 	{ "H5"  "H" "sp3" }
>> 	{ "HW"  "H" "sp3" }
>> 	{ "HC"  "H" "sp3" }
>> 	{ "HA"  "H" "sp3" }
>> 	{ "HP"  "H" "sp3" }
>> 	{ "HZ"  "H" "sp3" }
>> 	{ "OH"  "O" "sp3" }
>> 	{ "OS"  "O" "sp3" }
>> 	{ "O"   "O" "sp2" }
>> 	{ "O2"  "O" "sp2" }
>> 	{ "OP"  "O" "sp2" }
>> 	{ "OW"  "O" "sp3" }
>> 	{ "CT"  "C" "sp3" }
>> 	{ "CX"  "C" "sp3" }
>> 	{ "C8"  "C" "sp3" }
>> 	{ "2C"  "C" "sp3" }
>> 	{ "3C"  "C" "sp3" }
>> 	{ "CH"  "C" "sp3" }
>> 	{ "CS"  "C" "sp2" }
>> 	{ "C"   "C" "sp2" }
>> 	{ "CO"  "C" "sp2" }
>> 	{ "C*"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CB"  "C" "sp2" }
>> 	{ "CC"  "C" "sp2" }
>> 	{ "CN"  "C" "sp2" }
>> 	{ "CM"  "C" "sp2" }
>> 	{ "CK"  "C" "sp2" }
>> 	{ "CQ"  "C" "sp2" }
>> 	{ "CD"  "C" "sp2" }
>> 	{ "C5"  "C" "sp2" }
>> 	{ "C4"  "C" "sp2" }
>> 	{ "CP"  "C" "sp2" }
>> 	{ "CI"  "C" "sp3" }
>> 	{ "CJ"  "C" "sp2" }
>> 	{ "CW"  "C" "sp2" }
>> 	{ "CV"  "C" "sp2" }
>> 	{ "CR"  "C" "sp2" }
>> 	{ "CA"  "C" "sp2" }
>> 	{ "CY"  "C" "sp2" }
>> 	{ "C0"  "Ca" "sp3" }
>> 	{ "MG"  "Mg" "sp3" }
>> 	{ "N"   "N" "sp2" }
>> 	{ "NA"  "N" "sp2" }
>> 	{ "N2"  "N" "sp2" }
>> 	{ "N*"  "N" "sp2" }
>> 	{ "NP"  "N" "sp2" }
>> 	{ "NQ"  "N" "sp2" }
>> 	{ "NB"  "N" "sp2" }
>> 	{ "NC"  "N" "sp2" }
>> 	{ "NT"  "N" "sp3" }
>> 	{ "NY"  "N" "sp2" }
>> 	{ "N3"  "N" "sp3" }
>> 	{ "S"   "S" "sp3" }
>> 	{ "SH"  "S" "sp3" }
>> 	{ "P"   "P" "sp3" }
>> 	{ "LP"  ""  "sp3" }
>> 	{ "EP"  ""  "sp3" }
>> 	{ "F"   "F" "sp3" }
>> 	{ "Cl"  "Cl" "sp3" }
>> 	{ "Br"  "Br" "sp3" }
>> 	{ "I"   "I"  "sp3" }
>> 	{ "F-"   "F" "sp3" }
>> 	{ "Cl-"  "Cl" "sp3" }
>> 	{ "Br-"  "Br" "sp3" }
>> 	{ "I-"   "I"  "sp3" }
>> 	{ "Li+"  "Li"  "sp3" }
>> 	{ "Na+"  "Na"  "sp3" }
>> 	{ "K+"  "K"  "sp3" }
>> 	{ "Rb+"  "Rb"  "sp3" }
>> 	{ "Cs+"  "Cs"  "sp3" }
>> 	{ "Mg+"  "Mg"  "sp3" }
>> }
>> 
>> #
>> #	Load the main parameter set.
>> #
>> 
>> parm10 = loadamberparams parm10.dat
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/parm10.dat
Reading title:
PARM99 + frcmod.ff99SB + frcmod.parmbsc0 + OL3 for RNA
>> 
>> #
>> #	Load nucleic acids
>> #
>> 
>> addPdbResMap {
>>   { 0 "DG" "DG5"  } { 1 "DG" "DG3"  }  
>>   { 0 "DA" "DA5"  } { 1 "DA" "DA3"  }  
>>   { 0 "DC" "DC5"  } { 1 "DC" "DC3"  }  
>>   { 0 "DT" "DT5"  } { 1 "DT" "DT3"  }  
>> #  some really old Amber residue names, assuming DNA:
>>   { 0 "GUA" "DG5"  } { 1 "GUA" "DG3"  } { "GUA" "DG" }
>>   { 0 "ADE" "DA5"  } { 1 "ADE" "DA3"  } { "ADE" "DA" }
>>   { 0 "CYT" "DC5"  } { 1 "CYT" "DC3"  } { "CYT" "DC" }
>>   { 0 "THY" "DT5"  } { 1 "THY" "DT3"  } { "THY" "DT" }
>> 
>> }
>> 
>> #  try to be good about reading in really old atom names as well:
>> addPdbAtomMap {
>>   { "O5*" "O5'" }
>>   { "C5*" "C5'" }
>>   { "C4*" "C4'" }
>>   { "O4*" "O4'" }
>>   { "C3*" "C3'" }
>>   { "O3*" "O3'" }
>>   { "C2*" "C2'" }
>>   { "O2*" "O2'" }
>>   { "C1*" "C1'" }
>>   { "C5M" "C7"  }
>>   { "H1*" "H1'" }
>>   { "H2*1" "H2'" }
>>   { "'H2'" "H2''" }
>>   { "H2*2" "H2''" }
>>   { "H2'1" "H2'" }
>>   { "H2'2" "H2''" }
>>   { "H3*" "H3'" }
>>   { "H4*" "H4'" }
>>   { "H5*1" "H5'" }
>>   { "H5*2" "H5''" }
>>   { "H5'1" "H5'" }
>>   { "H5'2" "H5''" }
>>   { "'H5'" "H5''" }
>>   { "HO'2" "HO2'" }
>>   { "H5T"  "HO5'" }
>>   { "H3T"  "HO3'" }
>>   { "O1'" "O4'" }
>>   { "OA"  "OP1" }
>>   { "OB"  "OP2" }
>>   { "O1P" "OP1" }
>>   { "O2P" "OP2" }
>> }
>> 
>> #
>> # Load parameters for BSC1
>> #
>> addAtomTypes {
>>   { "C1" "C" "sp2" }
>>   { "C2" "C" "sp2" }
>>   { "CI" "C" "sp3" }
>>   { "CE" "C" "sp3" }
>>  }
>> 
>> loadoff parmBSC1.lib
Loading library: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/lib/parmBSC1.lib
Loading: DA
Loading: DA3
Loading: DA5
Loading: DAN
Loading: DC
Loading: DC3
Loading: DC5
Loading: DCN
Loading: DG
Loading: DG3
Loading: DG5
Loading: DGN
Loading: DT
Loading: DT3
Loading: DT5
Loading: DTN
>> loadamberparams frcmod.parmbsc1
Loading parameters: /home/dgyancha/anaconda3/envs/AmberTools23/dat/leap/parm/frcmod.parmbsc1
Reading force field modification type file (frcmod)
Reading title:
Parmbsc1 force-field for DNA
> 
> 
> # Define the first strand (strand1)
> strand1 = sequence { DC5 DG DC DG DA DA DT DT DC DG DC DG DC3 }
Sequence: DC5
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DA
Sequence: DA
Sequence: DT
Sequence: DT
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DC3
> 
> # Define the second strand (strand2), which should be complementary to strand1
> # Ensure the sequence is complementary to strand1 for proper pairing
> strand2 = sequence { DG5 DC DG DC DT DT DA DA DC DG DC DG DG3 }
Sequence: DG5
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DT
Sequence: DT
Sequence: DA
Sequence: DA
Sequence: DC
Sequence: DG
Sequence: DC
Sequence: DG
Sequence: DG3
> 
> # Combine the two strands into a double-stranded DNA
> dna = combine { strand1 strand2 }
  Sequence: DC5
  Sequence: DG5
> 
> # Optionally, adjust the strands if needed
> # translate dna {0.0 0.0 2.0}   # Move the combined strands apart
> # rotate dna {0.0 0.0 30.0}     # Rotate if needed for better alignment
> 
> # Save the structure as a PDB file
> savepdb dna dna_double_helix.pdb
Writing pdb file: dna_double_helix.pdb
> saveamberparm dna dna_double_helix.prmtop dna_double_helix.inpcrd
Checking Unit.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Warning!
The unperturbed charge of the unit (-24.000000) is not zero.

/home/dgyancha/anaconda3/envs/AmberTools23/bin/teLeap: Note.
Ignoring the warning from Unit Checking.

Building topology.
Building atom parameters.
Building bond parameters.
Building angle parameters.
Building proper torsion parameters.
Building improper torsion parameters.
 total 178 improper torsions applied
Building H-Bond parameters.
Incorporating Non-Bonded adjustments.
Not Marking per-residue atom chain types.
Marking per-residue atom chain types.
 (no restraints)
> 
> quit  # Exit tleap
	Quit

Exiting LEaP: Errors = 0; Warnings = 1; Notes = 1.
